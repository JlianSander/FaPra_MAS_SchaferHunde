# general
draw_icons = True
draw_coords = False

#agents
vision_range = 10

# sheeps
sheep_wait_duration = 100

# hounds

# ---------------- search ----------------
# strategy controls
# currently chosen strategy to cluster swarms
hound_search_strategy = 1
# total amount of strategies to search for sheep
hound_search_strategy_amount = 2

# max number of retries, that a hound does when he's jammed during a search
hound_search_jammed_retries = 3
# space between the spiral paths during a search
hound_search_space_between_lines = 1

# ---------------- drive -----------------
# if "True" the hounds will never drive and only search the whole time. Combine this variable set to "True" and the search strategy 1 to get a complete random behaviour of the hounds.
hound_no_driving = False

# strategy controls
# currently chosen strategy to cluster swarms
hound_strategy_cluster_swarm = 3
# currently chosen strategy to select a swarm
hound_strategy_select_swarm = 2
# currently chosen strategy to calculate the positions to drive a swarm
hound_strategy_drive = 3
# total amount of strategies to cluster swarms
hound_strategy_cluster_swarm_amount = 3
# total amount of strategies to select a swarm
hound_strategy_select_swarm_amount = 2
# total amount of strategies to drive a swarm
hound_strategy_drive_amount = 3

# used for cluster swarm strategies, to define the max allowed distance to map a sheep to a swarm
hound_cluster_swarm_limit_distance_member = 2
# used in the drive strategies to calculate the drive positions 1-5 by angular translation
hound_drive_angle_increment = 35
# used while calculating a path for movement or for calculating driving position of the hound, to keep a minimum distance to the sheep
hound_keep_distance_to_sheep = 0
# max number of agents that shall drive a swarm togehter
hound_limit_number_agents_driving_swarm = 3
# max number of recalculation while trying to calculate a valid target position for the hound to move to, e.g. after he calculated a position to drive a swarm
hound_max_recalc_new_target_pos = 10
# an offset that is add to the swarm radius and the distance to keep to a sheep, to determine which hound might driving a swarm
hound_offset_to_drive_pos_for_assuming = 3
# weight of the criteria 'proximity' when selecting a swarm to drive
hound_select_swarm_weight_proximity = 1
# weight of the criteria 'size' when selecting a swarm to drive
hound_select_swarm_weight_size = 1
# number of iterations, that a hound will stay on the same position, before starting to search
hound_stay_on_same_position = 10
# multiplier to hound_wait defining the time to wait before reassessing the current situation and recalculating the drive positions
hound_wait_ratio_between_driving = 0.1
# multiplier to hound_wait defining the time to wait before the ignorance of certain sheep, becomes forgotten, so that these sheep are treated normally
hound_wait_ratio_ignore_sheep_forget = 8
# multiplier to hound_wait defining the time to wait before the surroundings of the hound get scanned again
hound_wait_ratio_perception = 0.01
# coefficients for the formula "wait_ratio = a*e^(b*[numberSheep])" defining how much faster the hound is compared to the sheep
hound_wait_ratio_coeff_a = 1.9435 
hound_wait_ratio_coeff_b = -0.12
# boolean defining if the hound is able to enter the corral area
hound_walk_through_corral = True
